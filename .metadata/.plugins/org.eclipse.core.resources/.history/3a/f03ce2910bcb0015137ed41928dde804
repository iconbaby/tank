import java.awt.*;
import java.awt.event.KeyEvent;
public class Tank {

	private int x,y;
	
	private boolean bL =false, bU = false, bD = false, bR = false;
	
	private enum Direction {R,L,U,D,RU,RD,LU,LD,STOP};
	
	private Direction dir = Direction.STOP;
	
	public Tank(int x,int y) {
		this.x = x;
		this.y = y;
	}
	
	public void draw(Graphics g) {
		Color c = g.getColor();
		g.setColor(Color.RED);
		g.fillOval(x,y,30,30);
		g.setColor(c);
		
	}
	
	void move() {
		switch(dir) {
		cade U :{
			y += 5;
			break;
		}	
		case D :{
			y -=5;
			break;
		}	
		case L :{
			x -= 5;
			break;
		}	
		case R :{
			x += 5;
		}
			
		case U :{
			{
		case U :{
			{
		case U :{
			{
		case U :{
			
		}
		
		}
	
	void locateDirection() {
		if(bU && !bL && !bD && !bR) dir = Direction.U;
		else if(!bU && bL && !bD && !bR) dir = Direction.L;
		else if(!bU && !bL && bD && !bR) dir = Direction.D;
		else if(!bU && !bL && !bD && bR) dir = Direction.R;
		else if(bU && bL && !bD && !bR) dir = Direction.LU;
		else if(bU && !bL && !bD && bR) dir = Direction.RU;
		else if(bU && bL && bD && !bR) dir = Direction.LD;
		else if(bU && !bL && bD && bR) dir = Direction.RD;
		move();
	}
	
	public void keyPressed(KeyEvent e) {
		
		int key = e.getKeyCode();
		switch(key) {
		case KeyEvent.VK_RIGHT:{  
			bR = true;
			break;
		}
		case KeyEvent.VK_LEFT:{
			bL = true;
			break;
		}
		case KeyEvent.VK_UP: {
			bU = true;
			break;
		}
		case KeyEvent.VK_DOWN: {
			bD = true;
			break;
		}
		
		}
		locateDirection();
			
	}
}